# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file './UI2/mainWindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtGui import *
from PyQt5.QtWidgets import *
import sys, os, subprocess

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(650, 500)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(0, 0, 651, 52))
        self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")
        self.topBarHBox = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)
        self.topBarHBox.setContentsMargins(0, 0, 0, 0)
        self.topBarHBox.setSpacing(0)
        self.topBarHBox.setObjectName("topBarHBox")
        self.vmButton = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        self.vmButton.setMinimumSize(QtCore.QSize(0, 50))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(126, 167, 100))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(189, 250, 150))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(157, 208, 125))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(63, 83, 50))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(84, 111, 67))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(126, 167, 100))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(190, 211, 177))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(126, 167, 100))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(189, 250, 150))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(157, 208, 125))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(63, 83, 50))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(84, 111, 67))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(126, 167, 100))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(190, 211, 177))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(63, 83, 50))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(126, 167, 100))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(189, 250, 150))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(157, 208, 125))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(63, 83, 50))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(84, 111, 67))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(63, 83, 50))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(63, 83, 50))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(126, 167, 100))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(126, 167, 100))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(126, 167, 100))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(63, 83, 50, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.PlaceholderText, brush)
        self.vmButton.setPalette(palette)
        self.vmButton.setDefault(False)
        self.vmButton.setFlat(False)
        self.vmButton.setObjectName("vmButton")
        self.topBarHBox.addWidget(self.vmButton)
        self.vnButton = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.vnButton.sizePolicy().hasHeightForWidth())
        self.vnButton.setSizePolicy(sizePolicy)
        self.vnButton.setMinimumSize(QtCore.QSize(0, 50))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(143, 86, 184))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(207, 140, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(175, 113, 219))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(72, 43, 92))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(95, 57, 123))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(143, 86, 184))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(199, 170, 219))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(143, 86, 184))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(207, 140, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(175, 113, 219))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(72, 43, 92))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(95, 57, 123))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(143, 86, 184))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(199, 170, 219))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(72, 43, 92))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(143, 86, 184))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(207, 140, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(175, 113, 219))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(72, 43, 92))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(95, 57, 123))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(72, 43, 92))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(72, 43, 92))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(143, 86, 184))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(143, 86, 184))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(143, 86, 184))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(72, 43, 92, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.PlaceholderText, brush)
        self.vnButton.setPalette(palette)
        self.vnButton.setObjectName("vnButton")
        self.topBarHBox.addWidget(self.vnButton)
        self.horizontalLayoutWidget_2 = QtWidgets.QWidget(self.centralwidget)
        self.horizontalLayoutWidget_2.setGeometry(QtCore.QRect(10, 60, 631, 431))
        self.horizontalLayoutWidget_2.setObjectName("horizontalLayoutWidget_2")
        self.mainContentHBox = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_2)
        self.mainContentHBox.setContentsMargins(0, 0, 0, 0)
        self.mainContentHBox.setSpacing(20)
        self.mainContentHBox.setObjectName("mainContentHBox")
        self.vmListVBox = QtWidgets.QVBoxLayout()
        self.vmListVBox.setObjectName("vmListVBox")
        self.listLabel = QtWidgets.QLabel(self.horizontalLayoutWidget_2)
        self.listLabel.setMaximumSize(QtCore.QSize(16777215, 50))
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        self.listLabel.setFont(font)
        self.listLabel.setObjectName("listLabel")
        self.vmListVBox.addWidget(self.listLabel)
        self.listWidget = QtWidgets.QListWidget(self.horizontalLayoutWidget_2)
        self.listWidget.setMaximumSize(QtCore.QSize(200, 400))
        self.listWidget.setObjectName("listWidget")
        self.vmListVBox.addWidget(self.listWidget)
        self.mainContentHBox.addLayout(self.vmListVBox)
        self.vmInfosVBox = QtWidgets.QVBoxLayout()
        self.vmInfosVBox.setObjectName("vmInfosVBox")
        self.infoLabel = QtWidgets.QLabel(self.horizontalLayoutWidget_2)
        self.infoLabel.setMinimumSize(QtCore.QSize(0, 0))
        self.infoLabel.setMaximumSize(QtCore.QSize(16777215, 50))
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        self.infoLabel.setFont(font)
        self.infoLabel.setObjectName("infoLabel")
        self.vmInfosVBox.addWidget(self.infoLabel)
        self.infosList = QtWidgets.QListWidget(self.horizontalLayoutWidget_2)
        self.infosList.setEnabled(False)
        self.infosList.setProperty("isWrapping", False)
        self.infosList.setWordWrap(True)
        self.infosList.setObjectName("infosList")
        item = QtWidgets.QListWidgetItem()
        self.infosList.addItem(item)
        self.vmInfosVBox.addWidget(self.infosList)
        self.mainContentHBox.addLayout(self.vmInfosVBox)
        self.actionButtonsVBox = QtWidgets.QVBoxLayout()
        self.actionButtonsVBox.setObjectName("actionButtonsVBox")
        self.createButton = QtWidgets.QPushButton(self.horizontalLayoutWidget_2)
        self.createButton.setObjectName("createButton")
        self.actionButtonsVBox.addWidget(self.createButton)
        self.startButton = QtWidgets.QPushButton(self.horizontalLayoutWidget_2)
        self.startButton.setObjectName("startButton")
        self.actionButtonsVBox.addWidget(self.startButton)
        self.stopButton = QtWidgets.QPushButton(self.horizontalLayoutWidget_2)
        self.stopButton.setObjectName("stopButton")
        self.actionButtonsVBox.addWidget(self.stopButton)
        self.attachButton = QtWidgets.QPushButton(self.horizontalLayoutWidget_2)
        self.attachButton.setObjectName("attachButton")
        self.actionButtonsVBox.addWidget(self.attachButton)
        self.networkButton = QtWidgets.QPushButton(self.horizontalLayoutWidget_2)
        self.networkButton.setObjectName("networkButton")
        self.actionButtonsVBox.addWidget(self.networkButton)
        self.filesButton = QtWidgets.QPushButton(self.horizontalLayoutWidget_2)
        self.filesButton.setObjectName("filesButton")
        self.actionButtonsVBox.addWidget(self.filesButton)
        self.removeButton = QtWidgets.QPushButton(self.horizontalLayoutWidget_2)
        self.removeButton.setObjectName("removeButton")
        self.actionButtonsVBox.addWidget(self.removeButton)
        self.mainContentHBox.addLayout(self.actionButtonsVBox)
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "the Virtual Things"))
        self.vmButton.setText(_translate("MainWindow", "Virtual Machines (VM)"))
        self.vnButton.setText(_translate("MainWindow", "Virtual Networks (VN)"))
        self.listLabel.setText(_translate("MainWindow", "VM List"))
        self.infoLabel.setText(_translate("MainWindow", "VM Info"))
        __sortingEnabled = self.infosList.isSortingEnabled()
        self.infosList.setSortingEnabled(False)
        item = self.infosList.item(0)
        item.setText(_translate("MainWindow", "Please select or create a VM to show informations about it"))
        self.infosList.setSortingEnabled(__sortingEnabled)
        self.createButton.setText(_translate("MainWindow", "Create"))
        self.startButton.setText(_translate("MainWindow", "Start"))
        self.stopButton.setText(_translate("MainWindow", "Stop"))
        self.attachButton.setText(_translate("MainWindow", "Open terminal"))
        self.networkButton.setText(_translate("MainWindow", "Manage network"))
        self.filesButton.setText(_translate("MainWindow", "Transfer files"))
        self.removeButton.setText(_translate("MainWindow", "Remove"))
        self.selectedItem = None
        self.updateVMList()
        self.createButton.clicked.connect(self.createVMWindow)
        self.listWidget.itemClicked.connect(lambda : self.updateVMInfos(self.listWidget.currentItem().text()))
        self.removeButton.clicked.connect(self.deleteVM)
        self.startButton.clicked.connect(self.startVM)
        self.stopButton.clicked.connect(self.stopVM)
        self.attachButton.clicked.connect(self.attachVM)
        self.networkButton.clicked.connect(self.openNetworkPage)
        self.filesButton.clicked.connect(self.openTransferPage)
        self.vnButton.clicked.connect(self.vnSwitch)
        self.vmButton.clicked.connect(self.vmSwitch)


    def updateVMInfos(self, vmName):
        self.selectedItem = vmName
        vmInfo = os.popen(f"vm-info {self.selectedItem}").read().splitlines()
        self.infosList.clear()
        for line in vmInfo:
            item = QtWidgets.QListWidgetItem()
            item.setText(line)
            self.infosList.addItem(item)

    def updateVMList(self):
        self.listWidget.clear()
        vmList = os.popen("vm-ls -n").read().splitlines()
        vmList = [line.split()[0] for line in vmList if line]
        for line in vmList:
            if "running" in os.popen(f"vm-status {line}").read():
                item = QtWidgets.QListWidgetItem()
                item.setText(line)
                item.setBackground( QColor("#00A516") )
                self.listWidget.addItem(item)
            else:
                item = QtWidgets.QListWidgetItem()
                item.setText(line)
                self.listWidget.addItem(item)
    
    def getImageList(self):
        images = ["debian","archlinux", "fedora"]
        return images
        
    def createVMWindow(self):
        os.system("python3 /usr/bin/theVirtualThings/UI/theVirtualThingsCreationPage.py")
        self.updateVMList()

    def deleteVM(self):
        if self.selectedItem is None:
            dialog = QtWidgets.QMessageBox()
            dialog.setWindowTitle("theVirtualThings - Error")
            dialog.setIcon(QtWidgets.QMessageBox.Critical)
            dialog.setText("Please select a VM to delete.")
            dialog.exec_()
            return
        
        dialog = QtWidgets.QMessageBox()
        dialog.setWindowTitle("theVirtualThings - Delete VM")
        dialog.setIcon(QtWidgets.QMessageBox.Information)
        dialog.setText("Are you sure you want to delete " + self.selectedItem +" ?\nThis action is irreversible.")
        dialog.setStandardButtons(QtWidgets.QMessageBox.Yes | QtWidgets.QMessageBox.No)
        dialog.setDefaultButton(QtWidgets.QMessageBox.No)
        ret = dialog.exec_()
        if ret == QtWidgets.QMessageBox.Yes:
            command = f"vm-rm {self.selectedItem} -f"
            p = subprocess.Popen(command, stdout=subprocess.PIPE, shell=True)
            (output, err) = p.communicate()
            p_status = p.wait()
            if p_status != 0:
                dialog = QtWidgets.QMessageBox()
                dialog.setWindowTitle("theVirtualThings - Error")
                dialog.setIcon(QtWidgets.QMessageBox.Critical)
                dialog.setText("An error occured while deleting the VM.\nPlease check the VM name.")
                dialog.exec_()
            else:
                dialog = QtWidgets.QMessageBox()
                dialog.setWindowTitle("theVirtualThings - Success")
                dialog.setIcon(QtWidgets.QMessageBox.Information)
                dialog.setText("The VM has been deleted successfully :)")
                dialog.exec_()
        self.selectedItem = None
        self.updateVMList()
        self.infosList.clear()

    def startVM(self):
        if self.selectedItem is None:
            dialog = QtWidgets.QMessageBox()
            dialog.setWindowTitle("theVirtualThings - Error")
            dialog.setIcon(QtWidgets.QMessageBox.Critical)
            dialog.setText("Please select a VM to start.")
            dialog.exec_()
            return
        command = f"vm-start {self.selectedItem}"
        p = subprocess.Popen(command, stdout=subprocess.PIPE, shell=True)
        (output, err) = p.communicate()
        p_status = p.wait()
        if p_status != 0:
            dialog = QtWidgets.QMessageBox()
            dialog.setWindowTitle("theVirtualThings - Error")
            dialog.setIcon(QtWidgets.QMessageBox.Critical)
            dialog.setText("An error occured while starting the VM.\nPlease check the VM name.")
            dialog.exec_()
        else:
            dialog = QtWidgets.QMessageBox()
            dialog.setWindowTitle("theVirtualThings - Success")
            dialog.setIcon(QtWidgets.QMessageBox.Information)
            dialog.setText("The VM has been started successfully :)")
            dialog.exec_()
        self.updateVMList()
        self.updateVMInfos(vmName=self.selectedItem)

    def stopVM(self):
        if self.selectedItem is None:
            dialog = QtWidgets.QMessageBox()
            dialog.setWindowTitle("theVirtualThings - Error")
            dialog.setIcon(QtWidgets.QMessageBox.Critical)
            dialog.setText("Please select a VM to stop.")
            dialog.exec_()
            return
        command = f"vm-stop {self.selectedItem}"
        p = subprocess.Popen(command, stdout=subprocess.PIPE, shell=True)
        (output, err) = p.communicate()
        p_status = p.wait()
        if p_status != 0:
            dialog = QtWidgets.QMessageBox()
            dialog.setWindowTitle("theVirtualThings - Error")
            dialog.setIcon(QtWidgets.QMessageBox.Critical)
            dialog.setText("An error occured while stopping the VM.\nPlease check the VM name.")
            dialog.exec_()
        else:
            dialog = QtWidgets.QMessageBox()
            dialog.setWindowTitle("theVirtualThings - Success")
            dialog.setIcon(QtWidgets.QMessageBox.Information)
            dialog.setText("The VM has been stopped successfully :)")
            dialog.exec_()
        self.updateVMList()
        self.infosList.clear()

    def attachVM(self):
        if self.selectedItem is None:
            dialog = QtWidgets.QMessageBox()
            dialog.setWindowTitle("theVirtualThings - Error")
            dialog.setIcon(QtWidgets.QMessageBox.Critical)
            dialog.setText("Please select a VM to attach.")
            dialog.exec_()
            return
        elif "running" not in os.popen(f"vm-status {self.selectedItem}").read():
            dialog = QtWidgets.QMessageBox()
            dialog.setWindowTitle("theVirtualThings - Error")
            dialog.setIcon(QtWidgets.QMessageBox.Critical)
            dialog.setText("The selected VM is not running.\nPlease start it before attaching.")
            dialog.exec_()
            return
        subprocess.Popen(["konsole", "-e", f"vm-attach {self.selectedItem}"])

    def openNetworkPage(self):
        if self.selectedItem is None:
            dialog = QtWidgets.QMessageBox()
            dialog.setWindowTitle("theVirtualThings - Error")
            dialog.setIcon(QtWidgets.QMessageBox.Critical)
            dialog.setText("Please select a VM to manage its network interfaces.")
            dialog.exec_()
            return
        os.system(f"python3 /usr/bin/theVirtualThings/UI/theVirtualThingsNetworkPage.py {self.selectedItem}")

    def openTransferPage(self):
        if self.selectedItem is None:
            dialog = QtWidgets.QMessageBox()
            dialog.setWindowTitle("theVirtualThings - Error")
            dialog.setIcon(QtWidgets.QMessageBox.Critical)
            dialog.setText("Please select a VM to transfer files.")
            dialog.exec_()
            return
        os.system(f"python3 /usr/bin/theVirtualThings/UI/theVirtualThingsTransferPage.py {self.selectedItem}")

    def updateVNList(self):
        self.listWidget.clear()
        vmList = os.popen("vn-ls -n").read().splitlines()
        vmList = [line.split()[0] for line in vmList if line]
        for line in vmList:
            item = QtWidgets.QListWidgetItem()
            item.setText(line)
            self.listWidget.addItem(item)
    
    def updateVNInfos(self, vnName):
        self.selectedItem = vnName
        vmInfo = os.popen(f"vn-info {self.selectedItem}").read().splitlines()
        self.infosList.clear()
        for line in vmInfo:
            item = QtWidgets.QListWidgetItem()
            item.setText(line)
            self.infosList.addItem(item)

    def createVNWindow(self):
        os.system("python3 /usr/bin/theVirtualThings/UI/theVirtualThingsVnCreationPage.py")
        self.updateVNList()

    def deleteVN(self):
        if self.selectedItem is None:
            dialog = QtWidgets.QMessageBox()
            dialog.setWindowTitle("theVirtualThings - Error")
            dialog.setIcon(QtWidgets.QMessageBox.Critical)
            dialog.setText("Please select a VN to delete.")
            dialog.exec_()
            return
        
        dialog = QtWidgets.QMessageBox()
        dialog.setWindowTitle("theVirtualThings - Delete VN")
        dialog.setIcon(QtWidgets.QMessageBox.Information)
        dialog.setText("Are you sure you want to delete " + self.selectedItem +" ?\nThis action is irreversible.")
        dialog.setStandardButtons(QtWidgets.QMessageBox.Yes | QtWidgets.QMessageBox.No)
        dialog.setDefaultButton(QtWidgets.QMessageBox.No)
        ret = dialog.exec_()
        if ret == QtWidgets.QMessageBox.Yes:
            command = f"vn-rm {self.selectedItem} -f"
            p = subprocess.Popen(command, stdout=subprocess.PIPE, shell=True)
            (output, err) = p.communicate()
            p_status = p.wait()
            if p_status != 0:
                dialog = QtWidgets.QMessageBox()
                dialog.setWindowTitle("theVirtualThings - Error")
                dialog.setIcon(QtWidgets.QMessageBox.Critical)
                dialog.setText("An error occured while deleting the VN.\nPlease check the VN name.")
                dialog.exec_()
            else:
                dialog = QtWidgets.QMessageBox()
                dialog.setWindowTitle("theVirtualThings - Success")
                dialog.setIcon(QtWidgets.QMessageBox.Information)
                dialog.setText("The VN has been deleted successfully :)")
                dialog.exec_()
        self.selectedItem = None
        self.updateVNList()
        self.infosList.clear()

    def vnSwitch(self):
        self.selectedItem = None
        self.listLabel.setText("VN List")
        self.infoLabel.setText("VN Infos")
        self.updateVNList()

        self.createButton.setEnabled(True)
        self.removeButton.setEnabled(True)
        self.startButton.setEnabled(False)
        self.stopButton.setEnabled(False)
        self.attachButton.setEnabled(False)
        self.networkButton.setEnabled(False)
        self.filesButton.setEnabled(False)

        self.listWidget.itemClicked.disconnect()
        self.removeButton.clicked.disconnect()
        self.createButton.clicked.disconnect()

        self.listWidget.itemClicked.connect(lambda : self.updateVNInfos(self.listWidget.currentItem().text()))
        self.createButton.clicked.connect(self.createVNWindow)
        self.removeButton.clicked.connect(self.deleteVN)
        
    def vmSwitch(self):
        self.listLabel.setText("VM List")
        self.infoLabel.setText("VM Infos")
        self.updateVMList()

        self.createButton.setEnabled(True)
        self.removeButton.setEnabled(True)
        self.startButton.setEnabled(True)
        self.stopButton.setEnabled(True)
        self.attachButton.setEnabled(True)
        self.networkButton.setEnabled(True)
        self.filesButton.setEnabled(True)

        self.listWidget.itemClicked.disconnect()
        self.removeButton.clicked.disconnect()
        self.createButton.clicked.disconnect()

        self.listWidget.itemClicked.connect(lambda : self.updateVMInfos(self.listWidget.currentItem().text()))
        self.createButton.clicked.connect(self.createVMWindow)
        self.removeButton.clicked.connect(self.deleteVM)
        
            


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
