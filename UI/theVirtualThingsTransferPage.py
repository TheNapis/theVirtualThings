# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file './UI2/transferPage.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QFileDialog, QInputDialog, QLineEdit
import sys, subprocess


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(332, 251)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.mainWindowLabel = QtWidgets.QLabel(self.centralwidget)
        self.mainWindowLabel.setGeometry(QtCore.QRect(10, 10, 321, 41))
        font = QtGui.QFont()
        font.setPointSize(16)
        font.setBold(True)
        font.setItalic(False)
        self.mainWindowLabel.setFont(font)
        self.mainWindowLabel.setObjectName("mainWindowLabel")
        self.hostToVMButton = QtWidgets.QPushButton(self.centralwidget)
        self.hostToVMButton.setGeometry(QtCore.QRect(20, 100, 291, 34))
        self.hostToVMButton.setObjectName("hostToVMButton")
        self.vmToHostButton = QtWidgets.QPushButton(self.centralwidget)
        self.vmToHostButton.setGeometry(QtCore.QRect(20, 150, 291, 34))
        self.vmToHostButton.setObjectName("vmToHostButton")
        self.subLabel = QtWidgets.QLabel(self.centralwidget)
        self.subLabel.setGeometry(QtCore.QRect(130, 60, 131, 18))
        self.subLabel.setObjectName("subLabel")
        self.mountButton = QtWidgets.QPushButton(self.centralwidget)
        self.mountButton.setGeometry(QtCore.QRect(20, 200, 291, 34))
        self.mountButton.setObjectName("mountButton")
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.mainWindowLabel.setText(_translate("MainWindow", "Virtual Machine - File transfer"))
        self.hostToVMButton.setText(_translate("MainWindow", "Transfer a file from the host to the VM"))
        self.vmToHostButton.setText(_translate("MainWindow", "Transfer a file from the VM to the host"))
        self.subLabel.setText(_translate("MainWindow", "Host <--> {vmName}"))
        self.mountButton.setText(_translate("MainWindow", "Mount the VM filesystem"))
        self.selectedVM = sys.argv[1] if len(sys.argv) > 1 else None
        if self.selectedVM is None:
            dialog = QtWidgets.QMessageBox()
            dialog.setWindowTitle("theVirtualThings - Error")
            dialog.setIcon(QtWidgets.QMessageBox.Critical)
            dialog.setText("No VM specified. Please run this script with a VM name as an argument.")
            dialog.exec_()
            sys.exit(1)
        self.subLabel.setText(f"Host <--> {self.selectedVM}")
        self.hostToVMButton.clicked.connect(self.hostToVM)
        self.vmToHostButton.clicked.connect(self.vmToHost)
        self.mountButton.clicked.connect(self.mountVM)

    def hostToVM(self):
        file_dialog = QFileDialog(self)
        file_dialog.setWindowTitle("Open File")
        file_dialog.setFileMode(QFileDialog.FileMode.ExistingFile)
        file_dialog.setViewMode(QFileDialog.ViewMode.Detail)

        if file_dialog.exec():
            selected_files = file_dialog.selectedFiles()
            print("Selected File:", selected_files[0])

        subprocess.run(f"podman cp {selected_files[0]} {self.selectedVM}:/home", shell=True)
        dialog = QtWidgets.QMessageBox()
        dialog.setWindowTitle("theVirtualThings - Info")
        dialog.setIcon(QtWidgets.QMessageBox.Information)
        dialog.setText("Transfer complete!")
        dialog.exec_()
        

    def vmToHost(self):
        text, okPressed = QInputDialog.getText(self, "Enter your file path","Your file:", QLineEdit.Normal, "")
        if okPressed and text != '':
            print(text)
        dir = str(QFileDialog.getExistingDirectory(self, "Select Directory to Save File"))
        subprocess.run(f"podman cp {self.selectedVM}:{text} {dir}", shell=True)
        dialog = QtWidgets.QMessageBox()
        dialog.setWindowTitle("theVirtualThings - Info")
        dialog.setIcon(QtWidgets.QMessageBox.Information)
        dialog.setText("Transfer complete!")
        dialog.exec_()
        
    def mountVM(self):
        subprocess.run(f"podman unshare bash -c 'mnt=$(podman mount {self.selectedVM}); dolphin $mnt'", shell=True)
        subprocess.run(f" {self.selectedVM}", shell=True)


        

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
